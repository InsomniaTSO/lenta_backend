version: '3.8'
services:
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env

  backend:
    image: lenta_backend:staging
    restart: always
    command: >
      bash -c "python manage.py makemigrations sales&&
      python manage.py makemigrations categories&&
      python manage.py makemigrations forecast&&
      python manage.py makemigrations shops&&
      python manage.py makemigrations users&&
      python manage.py migrate &&
      python manage.py collectstatic --no-input &&
      python manage.py createsuperuser &&
      python manage.py load_shops &&
      python manage.py load_cat &&
      python manage.py load_sales &&
      gunicorn --bind 0:8000 lenta_backend.wsgi"
    volumes:
      - static_value:/app/static/
      - media_value:/app/media/
    depends_on:
      - db
    env_file:
      - ./.env

  # frontend:
  #   image: lenta_frontend:latest
  #   volumes:
  #     - ../frontend/:/app/result_build/

  nginx:
    image: nginx:1.21.3-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      # - ../frontend/build:/usr/share/nginx/html/
      - static_value:/var/html/static/
      - media_value:/var/html/media/
      - .static/redoc.yaml:/var/html/redoc/redoc.yaml
      - ./templates/redoc.html:/var/html/redoc/redoc.html
    depends_on:
       - backend
  
  ml:
    tty: true
    image: ml:staging
    restart: always
    depends_on:
      - nginx
    command: > 
      bash -c "python3 app.py&&
      tail -f /dev/null"
    
    

volumes:
  static_value:
  media_value:
  postgres_data:
